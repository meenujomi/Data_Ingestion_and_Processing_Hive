ADD JAR /opt/cloudera/parcels/CDH/lib/hive/lib/hive-hcatalog-core-1.1.0-cdh5.11.2.jar;
-- Dropping table incase it already exists
drop table taxi;
-- Creating table
create external table if not exists taxi(VendorID double, tpep_pickup_datetime timestamp, 
tpep_dropoff_datetime timestamp, passenger_count int, trip_distance double, RatecodeID int, 
store_and_fwd_flag string, PULocationID int, DOLocationID int, payment_type int, fare_amount double,
extra double, mta_tax double, tip_amount double, tolls_amount double, improvement_surcharge double, 
total_amount double) 
row format delimited fields terminated by ','
location '/common_folder/nyc_taxi_data/'
tblproperties ("skip.header.line.count"="1");
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Looking at the table
select * 
from taxi
limit 10;

select count(*)
from taxi;
-- 1174569 

-- Checking for null values
select sum(case when vendorid is null then 1 else 0 end) as vendorid,
       sum(case when tpep_pickup_datetime is null then 1 else 0 end) as tpep_pickup_datetime,
       sum(case when tpep_dropoff_datetime is null then 1 else 0 end) as tpep_dropoff_datetime,
       sum(case when passenger_count is null then 1 else 0 end) as passenger_count,
       sum(case when trip_distance is null then 1 else 0 end) as trip_distance,
       sum(case when ratecodeid is null then 1 else 0 end) as ratecodeid,
       sum(case when store_and_fwd_flag is null then 1 else 0 end) as store_and_fwd_flag,
       sum(case when pulocationid is null then 1 else 0 end) as pulocationid,
       sum(case when dolocationid is null then 1 else 0 end) as dolocationid,
       sum(case when payment_type is null then 1 else 0 end) as payment_type,
       sum(case when fare_amount is null then 1 else 0 end) as fare_amount,
       sum(case when extra is null then 1 else 0 end) as extra,
       sum(case when mta_tax is null then 1 else 0 end) as mta_tax,
       sum(case when tip_amount is null then 1 else 0 end) as tip_amount,
       sum(case when tolls_amount is null then 1 else 0 end) as tolls_amount,
       sum(case when improvement_surcharge is null then 1 else 0 end) as improvement_surcharge,
       sum(case when total_amount is null then 1 else 0 end) as total_amount
from taxi;
-- vendorid	    tpep_pickup_datetime	tpep_dropoff_datetime	passenger_count	trip_distance	ratecodeid	store_and_fwd_flag	pulocationid	dolocationid	payment_type	fare_amount	extra	mta_tax	tip_amount	tolls_amount	improvement_surcharge	total_amount
-- 	0           0                        0                  	0                              	0          	0	                0           	0           	0           	0          	0   	0                 	0           	0                   	0   
--  All are 0 which means no null values

-- Looking at the max and min
select min(vendorid) as min_vendorid, max (vendorid) as max_vendorid,
       min(tpep_pickup_datetime) as min_tpep_pickup_datetime, max (tpep_pickup_datetime) as max_tpep_pickup_datetime,
       min(tpep_dropoff_datetime) as min_tpep_dropoff_datetime, max (tpep_dropoff_datetime) as max_tpep_dropoff_datetime,
       min(passenger_count) as min_passenger_count, max (passenger_count) as passenger_count,
       min(trip_distance) as min_trip_distance, max (trip_distance) as max_trip_distance,
       min(ratecodeid) as min_ratecodeid, max (ratecodeid) as max_ratecodeid,
       min(store_and_fwd_flag) as min_store_and_fwd_flag, max (store_and_fwd_flag) as max_store_and_fwd_flag,
       min(pulocationid) as min_pulocationid, max (pulocationid) as max_pulocationid,
       min(dolocationid) as min_dolocationid, max (dolocationid) as max_dolocationid,
       min(payment_type) as min_payment_type, max (payment_type) as max_payment_type,
       min(fare_amount) as min_fare_amount, max (fare_amount) as max_fare_amount,
       min(extra) as min_extra, max (extra) as max_extra,
       min(mta_tax) as min_mta_tax, max (mta_tax) as max_mta_tax,
       min(tip_amount) as min_tip_amount, max (tip_amount) as max_tip_amount,
       min(tolls_amount) as min_tolls_amount, max (tolls_amount) as max_tolls_amount,
       min(improvement_surcharge) as min_improvement_surcharge, max (improvement_surcharge) as max_improvement_surcharge,
       min(total_amount) as min_total_amount, max (total_amount) as max_total_amount
from taxi;
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Checking column by column

-- 1. vendorid
select distinct vendorid
from taxi;
-- Result is 1 and 2 as expected

select count(vendorid), vendorid
from taxi
group by vendorid;
-- vendor   1            2
-- count    527386       647183
-- Looks like vendor 2 has more data but not much difference
------------------------------------------------------------------------------------------------------------------------------------------------------
-- 2. tpep_pickup_datetime
-- The pick up dates should always be between nov and dec 2017
select count(*)
from taxi
where tpep_pickup_datetime < '2017-11-1 00:00:00.0' or tpep_pickup_datetime >= '2018-01-01 00:00:00.0';
-- 14
-- This means 14 of the records are not in the given dates for analysis. They will be removed

-- checking which vendor is in fault
select vendorid, count(*)
from taxi
where tpep_pickup_datetime < '2017-11-1 00:00:00.0' or tpep_pickup_datetime >= '2018-01-01 00:00:00.0'
group by vendorid;
-- vendor   1            2
-- faults   0            14
-- Vendor 2 is in fault
------------------------------------------------------------------------------------------------------------------------------------------------------
-- 3. tpep_dropoff_datetime (Adding the next day as well just in case the drop off was after midnight)
select count(*)
from taxi
where tpep_dropoff_datetime < '2017-11-1 00:00:00.0' or tpep_dropoff_datetime >= '2018-01-02 00:00:00.0';
-- 7
-- This means 7 of the records are not in the given dates for analysis. They will be removed

-- checking which vendor is in fault
select vendorid, count(*)
from taxi
where tpep_dropoff_datetime < '2017-11-1 00:00:00.0' or tpep_dropoff_datetime >= '2018-01-02 00:00:00.0'
group by vendorid;
-- vendor   1            2
-- faults   1            6
-- Vendor 1 and 2 are in fault
------------------------------------------------------------------------------------------------------------------------------------------------------
-- Checking if there are drop off times before picking up
select count(*)
from taxi
where tpep_dropoff_datetime <= tpep_pickup_datetime;
-- 6555
-- So, they are faulty values and will be removed later before analysis

-- checking which vendor is in fault
select vendorid, count(*)
from taxi
where tpep_dropoff_datetime <= tpep_pickup_datetime
group by vendorid;
-- vendor   1            2
-- faults   3492         3063
-- Vendor 1 & 2 are in fault
------------------------------------------------------------------------------------------------------------------------------------------------------
-- 4. passenger_count
select  passenger_count, count(passenger_count)
from taxi
group by passenger_count
order by passenger_count;
-- There seems to be 6824 values with 0 passegers. That is not possible. So it will be removed later

-- checking which vendor is in fault
select  vendorid, count(passenger_count)
from taxi
where passenger_count in (0)
group by passenger_count,vendorid;
-- vendor   1            2
-- faults   6813         11
-- Vendor 1 and 2 are in fault
------------------------------------------------------------------------------------------------------------------------------------------------------
-- 5. trip_distance
select min(trip_distance) as min_trip_distance, max (trip_distance) as max_trip_distance
from taxi;
-- min_trip_distance    max_trip_distance
-- 0                    126.41

-- The distance travelled cannot be 0 or less than it
select count(trip_distance)
from taxi
where trip_distance <= 0;
-- 7402
-- They will be removed later

-- checking which vendor is in fault
select vendorid, count(trip_distance)
from taxi
where trip_distance <= 0
group by vendorid;
-- vendor   1            2
-- faults   4217         3185
-- Vendor 1 and 2 are in fault
------------------------------------------------------------------------------------------------------------------------------------------------------
-- 6. ratecodeid
select ratecodeid, count(ratecodeid)
from taxi
group by ratecodeid
order by ratecodeid;
-- There seems to be 99 with 9 records. They are not a part of it. So they will be removed

-- checking which vendor is in fault
select vendorid, count(ratecodeid)
from taxi
where ratecodeid in (99)
group by ratecodeid, vendorid;
-- vendor   1            2
-- faults   8            1
-- Vendor 1 and 2 are in fault
------------------------------------------------------------------------------------------------------------------------------------------------------
-- 7. store_and_fwd_flag
select store_and_fwd_flag, count(store_and_fwd_flag)
from taxi
group by store_and_fwd_flag
order by store_and_fwd_flag;
-- They seem fine
------------------------------------------------------------------------------------------------------------------------------------------------------
-- Skipping pulocationid and dolocationid since they will have different codes and since there are no null values
------------------------------------------------------------------------------------------------------------------------------------------------------
-- 8. payment_type
select payment_type, count(payment_type)
from taxi
group by payment_type
order by payment_type;
-- They seem fine
------------------------------------------------------------------------------------------------------------------------------------------------------
-- 9. fare_amount
select min(fare_amount) as min_fare_amount, max (fare_amount) as max_fare_amount
from taxi;
-- min_fare_amount    max_fare_amount
-- -200               650
-- Negative and 0 values are not possible

select count(fare_amount)
from taxi
where fare_amount <= 0;
-- 870
-- They will be removed later

-- checking which vendor is in fault
select vendorid, count(fare_amount)
from taxi
where fare_amount <= 0
group by vendorid;
-- vendor   1            2
-- faults   231          639
-- Vendor 1 and  2 are in fault
------------------------------------------------------------------------------------------------------------------------------------------------------
-- 10. extra (Only possibilities 0,1,0.5)
select count(extra)
from taxi 
where extra not in (0,0.5,1);
-- 4856
-- They will be removed later

-- checking which vendor is in fault
select vendorid, count(extra)
from taxi 
where extra not in (0,0.5,1)
group by vendorid;
-- vendor   1            2
-- faults   1823         3033
-- Vendor 1 and 2 are in fault
------------------------------------------------------------------------------------------------------------------------------------------------------
-- 11. mta_tax (Only possibilities 0,0.5)
select count(mta_tax)
from taxi 
where mta_tax not in (0,0.5);
-- 548
-- They will be removed later

-- checking which vendor is in fault
select vendorid, count(mta_tax)
from taxi 
where mta_tax not in (0,0.5)
group by vendorid;
-- vendor   1            2
-- faults   1            547
-- Vendor 1 and 2 are in fault
------------------------------------------------------------------------------------------------------------------------------------------------------
-- 12. tip_amount
select min(tip_amount) as min_tip_amount, max (tip_amount) as max_tip_amount
from taxi;
-- min_tip_amount    max_tip_amount
-- -1.16             450
-- Negative values are not possible

select count(tip_amount)
from taxi
where tip_amount < 0;
-- 4
-- They will be removed later

-- checking which vendor is in fault
select vendorid, count(tip_amount)
from taxi
where tip_amount < 0
group by vendorid;
-- vendor   1            2
-- faults   0            4
-- Vendor 2 is in fault
------------------------------------------------------------------------------------------------------------------------------------------------------
-- 13. tolls_amount
select min(tolls_amount) as min_tolls_amount, max (tolls_amount) as max_tolls_amount
from taxi;
-- min_tolls_amount    max_tolls_amount
-- -5.76               895.89
-- Negative values are not possible

select count(tolls_amount)
from taxi
where tolls_amount < 0;
-- 3
-- They will be removed later

-- checking which vendor is in fault
select vendorid, count(tolls_amount)
from taxi
where tolls_amount < 0
group by vendorid;
-- vendor   1            2
-- faults   0            3
-- Vendor 2 is in fault
------------------------------------------------------------------------------------------------------------------------------------------------------
-- 14. improvement_surcharge (Only possibilities 0,0.3)
select count(improvement_surcharge)
from taxi 
where improvement_surcharge not in (0,0.3);
-- 562
-- They will be removed later

-- checking which vendor is in fault
select vendorid, count(improvement_surcharge)
from taxi 
where improvement_surcharge not in (0,0.3)
group by vendorid;
-- vendor   1            2
-- faults   0            562
-- Vendor 2 is in fault
------------------------------------------------------------------------------------------------------------------------------------------------------
-- 	15. total_amount
select min(total_amount) as min_total_amount, max (total_amount) as max_total_amount
from taxi;
-- min_total_amount    max_total_amount
-- -200.8              928.19
-- Negative and 0 values are not possible

select count(total_amount)
from taxi
where total_amount <= 0;
-- 681
-- They will be removed later

-- checking which vendor is in fault
select vendorid, count(total_amount)
from taxi
where total_amount <= 0
group by vendorid;
-- vendor   1            2
-- faults   42           639
-- Vendor 1 and 2 are in fault

-- BOTH VENDORS SEEM TO BE MAKING FAULTS BUT VENDOR 2 (VeriFone Inc.) IS THE ONE MAKING MOST OF THE FAULTS IN THE ENTRY OF DATA.
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Creating final data
ADD JAR /opt/cloudera/parcels/CDH/lib/hive/lib/hive-hcatalog-core-1.1.0-cdh5.11.2.jar;
SET hive.exec.max.dynamic.partitions=100000;
SET hive.exec.max.dynamic.partitions.pernode=100000;

-- Dropping table incase it already exists
drop table taxi_clustered;

-- Partitioning with vendors and month since they are important for our analysis(Along with ORC)
create external table if not exists taxi_clustered(tpep_pickup_datetime timestamp, 
tpep_dropoff_datetime timestamp, passenger_count int, trip_distance double, RatecodeID int, 
store_and_fwd_flag string, PULocationID int, DOLocationID int, payment_type int, fare_amount double,
extra double, mta_tax double, tip_amount double, tolls_amount double, improvement_surcharge double, 
total_amount double)
partitioned by (mnth int, vendorid double)
stored as orc location '/user/hive/warehouse/meenu'
tblproperties ("orc.compress"="SNAPPY");

-- Then insert the data in the table 
insert overwrite table taxi_clustered partition(mnth, vendorid)
select tpep_pickup_datetime, tpep_dropoff_datetime, passenger_count, trip_distance, ratecodeid, store_and_fwd_flag,
pulocationid, dolocationid, payment_type, fare_amount, extra, mta_tax, tip_amount, tolls_amount,
improvement_surcharge, total_amount, month(tpep_pickup_datetime) as mnth, vendorid
from taxi
where   (tpep_pickup_datetime >= '2017-11-1 00:00:00.0' and tpep_pickup_datetime < '2018-01-01 00:00:00.0') and
        (tpep_dropoff_datetime >= '2017-11-1 00:00:00.0' and tpep_dropoff_datetime < '2018-01-02 00:00:00.0') and
        (tpep_dropoff_datetime > tpep_pickup_datetime) and
        (passenger_count not in (0)) and
        (trip_distance  >0) and 
        (ratecodeid != 99) and
        (fare_amount > 0 ) and
        (extra in (0,0.5,1)) and
        (mta_tax in (0,0.5)) and 
        (tip_amount >= 0) and
        (tolls_amount >= 0) and
        (improvement_surcharge in (0,0.3)) and
        (total_amount > 0 );

-- Looking for the lose in data
select count(*)
from taxi;
-- 1174569 
select count(*)
from taxi_clustered;
-- 1153604
select (1153604/1174569)*100;
-- 98.22 % of the data is left 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Analysis-I

-- 1. Compare the overall average fare per trip for November and December.
select mnth,round(avg(total_amount),2) as avg_total_amount,round(avg(fare_amount),2) as avg_fare_amount
from taxi_clustered
group by mnth;
-- mnth avg_total_amount	avg_fare_amount 
-- 11	16.19           	12.91
-- 12	15.89	            12.7   
-- There isn't much changes in the rate in both the months
------------------------------------------------------------------------------------------------------------------------------------------------------
-- 2. Explore the ‘number of passengers per trip’. How many trips are made by each level of ‘Passenger_count’?
--    Do most people travel solo or with other people?
select passenger_count,round(((count(*)/1153604)*100),4) as cont_percent, round(count(*),4) as cont
from  taxi_clustered 
group by passenger_count
order by cont desc;
-- passenger_count	cont_percent	cont
-- 1            	70.8245	        817034
-- 2            	15.1512     	174785
-- 5            	4.6842      	54037
-- 3            	4.3501      	50183
-- 6            	2.8504      	32882
-- 4            	2.1394       	24680
-- 7            	0.0003      	3
-- Most people travel solo 
------------------------------------------------------------------------------------------------------------------------------------------------------
-- 3. Which is the most preferred mode of payment?
select payment_type,round(((count(*)/1153604)*100),4) as cont
from taxi_clustered  
group by payment_type
order by cont desc;
-- payment_type	    cont(in %)
-- 1            	67.5408
-- 2            	31.9572
-- 3            	0.3894
-- 4            	0.1127
-- Type 1 (Credit Card) is the most preferred mode of payment.
------------------------------------------------------------------------------------------------------------------------------------------------------
-- 4. What is the average tip paid per trip?
select round(avg(tip_amount),2)  
from taxi_clustered;
-- 1.83
select percentile_approx(tip_amount,array(0.25, 0.50, 0.75))  
from taxi_clustered;
-- [0.0,1.36,2.45] are the tips paid in (0.25, 0.50, 0.75) percentiles respectively
------------------------------------------------------------------------------------------------------------------------------------------------------
-- 5. Explore the ‘Extra’ (charge) variable.
--    What fraction of total trips have an extra charge is levied?
select extra,round(((count(*)/1153604)*100),4) as cont 
from 
(select case when extra>0 then 1 else 0 end  extra
 from taxi_clustered ) a
group by extra
order by cont desc;
-- extra            	fraction
-- no extra	charge      53.8546
-- extra charge	        46.1454
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Analysis-II

-- 1. What is the correlation between the number of passengers on any given trip, and the tip paid per trip? 
--    Do multiple travellers tip more compared to solo travellers?
select round(corr(passenger_count, tip_amount),4) 
from taxi_clustered;
-- -0.0053
-- The correlation between the number of passengers and tips is very low( negative in this case)
------------------------------------------------------------------------------------------------------------------------------------------------------
-- 2. Segregate the data into five segments of ‘tip paid’: [0-5), [5-10), [10-15) , [15-20) and >=20. 
--    Calculate the percentage share of each bucket
select tips, round(((count(*)/1153604)*100),4) as cont
from (select
case when (tip_amount>=0 and tip_amount<5)   then '[0-5)' 
     when (tip_amount>=5 and tip_amount<10)  then '[5-10)' 
     when (tip_amount>=10 and tip_amount<15) then '[10-15)'
     when (tip_amount>=15 and tip_amount<20) then '[15-20)'
     when (tip_amount>=20)                   then '>=20' end as tips
     from taxi_clustered) a 
     group by tips
     order by cont desc;
-- tips	    count(in %)
-- [0-5)	92.4036
-- [5-10)	5.6382
-- [10-15)	1.6829
-- [15-20)	0.1872
-- >=20 	0.0881     
------------------------------------------------------------------------------------------------------------------------------------------------------
-- 3. Which month has a greater average ‘speed’ - November or December?
select mnth , round(avg(trip_distance/((unix_timestamp(tpep_dropoff_datetime)-unix_timestamp(tpep_pickup_datetime) )/3600)),2) as avg_speed
from taxi_clustered
group by mnth
order by avg_speed desc;
-- mnth 	avg_speed
-- 12	    11.07
-- 11   	10.97
-- December has a greater avg_speed.
------------------------------------------------------------------------------------------------------------------------------------------------------
-- 4. Analyse the average speed of the most happening days of the year, i.e. 31st December (New year’s eve) and 25th December (Christmas) 
--    Compare it with the overall average. 
select holiday, round(avg(speed),2) as avg_speed from 
(select case when ((tpep_pickup_datetime>='2017-12-25 00:00:00.0' and tpep_pickup_datetime<'2017-12-26 00:00:00.0') 
or (tpep_pickup_datetime>='2017-12-31 00:00:00.0' and tpep_pickup_datetime<'2018-01-01 00:00:00.0')) then 1 else 0 end as holiday, 
trip_distance/((unix_timestamp(tpep_dropoff_datetime)-unix_timestamp(tpep_pickup_datetime) )/3600) as speed
from taxi_clustered) a
group by holiday
order by avg_speed desc;
-- holiday	avg_speed
-- yes	    14.01
-- no	    10.95
select round(avg(trip_distance/((unix_timestamp(tpep_dropoff_datetime)-unix_timestamp(tpep_pickup_datetime) )/3600)),2) as overall_avg_speed
from taxi_clustered;
-- 11.02
-- The average speed seems to be more during a holiday day than on a non-holiday
------------------------------------------------------------------------------------------------------------------------------------------------------